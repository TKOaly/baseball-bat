name: Continuous Integration 

on:
  push:
  release:
    types: [released]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: registry.tko-aly.fi

jobs:
  test-unit:
    name: Run unit tests
    runs-on: ubuntu-latest
    container: node:18.17.1

    strategy:
      fail-fast: false
      matrix:
        suite: [banking, debts, payers, payments, reports]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install chromium dependencies
        run: apt update && apt install -y libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxi-dev libxtst-dev libnss3 libcups2 libxss1 libxrandr2 libasound2 libatk1.0-0 libatk-bridge2.0-0 libpangocairo-1.0-0 libgtk-3-0 libgbm1

      - name: Enable corepack
        run: corepack enable

      - name: Install Yarn dependencies
        run: pnpm install --filter=@bbat/backend... --frozen-lockfile

      - name: Build tests
        run: pnpm run --filter=@bbat/backend... --recursive build

      - name: Run tests
        run: pnpm run --recursive test:unit tests/unit/${{ matrix.suite }}.test.ts
        env:
          ASSET_PATH: ${{ github.workspace }}/packages/backend/assets

  test-e2e:
    name: Run E2E tests
    runs-on: ubuntu-latest
    container: node:18.17.1

    strategy:
      fail-fast: false
      matrix:
        suite: [debts, auth, banking, reports]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install chromium dependencies
        run: apt update && apt install -y libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxi-dev libxtst-dev libnss3 libcups2 libxss1 libxrandr2 libasound2 libatk1.0-0 libatk-bridge2.0-0 libpangocairo-1.0-0 libgtk-3-0 libgbm1

      - name: Enable corepack
        run: corepack enable

      - name: Install Yarn dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm --filter @bbat/backend exec playwright install

      - name: Build frontend dependencies
        run: pnpm run --filter @bbat/frontend^... build

      - name: Build frontend in development mode
        run: pnpm run --filter @bbat/frontend build -m development

      - name: Build backend
        run: pnpm run --filter @bbat/backend... build

      - name: Run tests
        run: pnpm run --filter=@bbat/backend test:e2e tests/e2e/${{ matrix.suite }}.spec.ts
        env:
          ASSET_PATH: ${{ github.workspace }}/packages/backend/assets

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-results
          path: packages/backend/test-results
          retention-days: 30

  build:
    name: Build Docker images
    runs-on: ubuntu-latest
    
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ secrets.PRIVATE_REGISTRY_URL }}
          username: ${{ secrets.PRIVATE_REGISTRY_USER }}
          password: ${{ secrets.PRIVATE_REGISTRY_PW }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata for image baseball-bat-nginx
        id: meta-nginx
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.PRIVATE_REGISTRY_URL }}/baseball-bat-nginx
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha
            ${{ github.event_name == 'release' && format('type=raw,value={0}', github.event.release.tag_name) }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata for image baseball-bat-backend
        id: meta-backend
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.PRIVATE_REGISTRY_URL }}/baseball-bat-backend
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image baseball-bat-nginx
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta-nginx.outputs.tags }}
          labels: ${{ steps.meta-nginx.outputs.labels }}
          target: production-nginx

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image baseball-bat-backend
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: ${{ github.event_name == 'release' }}
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          target: production-backend

  release:
    name: Deploy a new release
    runs-on: ubuntu-latest
    
    if: ${{ github.event_name == 'release' }}

    needs: [build, test-unit, test-e2e]

    steps:
      - name: Trigger deployment
        uses: aurelien-baudet/workflow-dispatch@v2
        with:
          token: ${{ secrets.DEPLOYMENT_PAT }}
          workflow: Bump Service
          inputs: '{"service": "baseball-bat", "tag": "${{ github.event.release.tag_name }}"}'
          repo: TKOaly/tko-aly-k8s-configs
          ref: main
