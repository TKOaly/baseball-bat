<div class="p-10">
  <h1 class="font-bold bg-yellow-400 text-4xl pl-2 py-2">Report: <%= metadata.name %></h1>

  <div class="mt-5 mb-5 gap-3 grid grid-cols-2">
    <div class="p-3 bg-gray-100">
      <table>
        <tr>
          <th class="text-left pr-2">ID</th>
          <td><%= metadata.humanId %> <%= metadata.revision > 1 ? `Rev. ${metadata.revision}` : '' %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Generated at</th>
          <td><%= utils.formatDate(metadata.generatedAt, 'dd.MM.yyyy HH:mm') %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Date Range</th>
          <td><%= utils.formatDate(data.options.startDate, 'dd.MM.yyyy') %> - <%= utils.formatDate(data.options.endDate, 'dd.MM.yyyy') %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Include drafts</th>
          <td><%= { include: 'Yes', exclude: 'No', 'only-drafts': 'Only drafts' }[data.options.includeDrafts] %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Included debt centers</th>
          <td><%= data.options.centers ? 'Selected' : 'All' %></td>
        </tr>
      </table>
    </div>
    <div class="p-3 bg-gray-100">
      <table>
        <%
          const totalDebit = data.groups.flatMap(group => group.events).map(event => event.debit).reduce(utils.sumEuroValues, utils.cents(0));
          const totalCredit = data.groups.flatMap(group => group.events).map(event => event.credit).reduce(utils.sumEuroValues, utils.cents(0));
          const totalBalance = utils.subEuroValues(totalDebit, totalCredit);
        %>
        <tr>
          <th class="text-left pr-2">Total debit</th>
          <td class="text-right"><%= utils.formatEuro(totalDebit) %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Total credit</th>
          <td class="text-right"><%= utils.formatEuro(totalCredit) %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Total balance</th>
          <td class="text-right"><%= utils.formatEuro(totalBalance) %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Group count</th>
          <td class="text-right"><%= data.groups.length %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Debt count</th>
          <td class="text-right"><%= new Set(data.groups.flatMap((group) => group.events).map((event) => event.debt.id)).size %></td>
        </tr>
        <tr>
          <th class="text-left pr-2">Unique payer count</th>
          <td class="text-right"><%= (new Set(data.groups.flatMap(({ events }) => events.filter(({ debt }) => debt.payerId).map(({ debt }) => debt.payerId.value)))).size %></td>
        </tr>
      </table>
    </div>
  </div>

  <table id="content">
    <tr>
      <th class="header-border">Time</th>
      <th class="header-border">Event</th>
      <th class="header-border">ID</th>
      <th class="header-border">Title</th>
      <th class="header-border">Payer</th>
      <th class="header-border">Date</th>
      <th class="header-border">Published</th>
      <th class="header-border">Due Date</th>
      <th class="header-border !text-right">Debit</th>
      <th class="header-border !text-right">Credit</th>
    </tr>
    <% for (const { name, id, events } of data.groups) { %>
      <%
        if (name) {
          const debit = events.map(event => event.debit).reduce(utils.sumEuroValues, utils.euro(0));
          const credit = events.map(event => event.credit).reduce(utils.sumEuroValues, utils.euro(0));
          const balance = utils.subEuroValues(debit, credit);
      %>
      <tr>
        <td></td>
        <td></td>
        <td class="font-bold"><%= id %></td>
        <td class="font-bold" colspan=3><%= name %></td>
        <td class="text-right text-gray-600" colspan=2>(<%= utils.formatEuro(balance) %>)</td>
        <td class="font-bold text-right"><%= utils.formatEuro(debit) %></td>
        <td class="font-bold text-right"><%= utils.formatEuro(credit) %></td>
      </tr>
      <% } %>
      <%
        for (const event of events) {
          const debt = event.debt;
      %>
        <tr>
          <td><%= utils.formatDate(event.time, 'dd.MM.yyyy HH:mm') %></td>
          <td><%= event.type %></td>
          <td><%= debt.humanId %></td>
          <td><%= debt.name %></td>
          <td><%= debt.payer.name %></td>
          <td><%= debt.date ? utils.formatDate(debt.date, 'dd.MM.yyyy') : '' %></td>
          <td><%= debt.publishedAt ? utils.formatDate(debt.publishedAt, 'dd.MM.yyyy') : '' %></td>
          <td><%= debt.dueDate ? utils.formatDate(debt.dueDate, 'dd.MM.yyyy') : '' %></td>
          <td class="text-right"><%= utils.formatEuro(event.debit) %></td>
          <td class="text-right"><%= utils.formatEuro(event.credit) %></td>
        </tr>
      <% } %>
    <% } %>
  </table>
</div>

<style type="postcss">
  table#content {
    width: 100%;
  }

  #content th {
    @apply bg-gray-100 py-0.5 px-1 text-left whitespace-nowrap;
  }

  .header-border {
    @apply border-b-4 border-b-gray-300;
  }

  #content td {
    @apply px-1 py-0.5;

    vertical-align: top;
  }

  #content tbody tr:nth-child(even) {
    @apply bg-gray-100;
  }
</style>
